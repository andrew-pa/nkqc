"some useful Win32 APIs"
fn exitProcessWithCode: {code u32} #(#'ExitProcess@4' {()})
fn emitBeepOfFrequency: {freq i32} forTime: {duration i32} #(#'Beep@8' {bool})
fn stdHandle: {index i32} #(#'GetStdHandle@4' {*u32})
fn write: {file *u32} data: {buffer *u8} ofLength: {len u32} returningBytesWritten: {numBytes *u32} andOverlapped: {ovr *u32}
	#(#'WriteFile@20' {bool})

"
integer math, comparisions. loops
strings, files/streams/IO
collections
"

"fn testIfGiven: {x i32} [
	(x < 0) ifTrue: [ #G emitBeepOfFrequency: 330 forTime: 20 ].
	((x + 5) > 0) ifFalse: [ #G emitBeepOfFrequency: 440 forTime: 20 ].
	^ (x == 3) ifTrue: [ 21 ] ifFalse: [ 7 ]
]
[x < 3] while: [#G doStuff]
fn loops [
	0 to: 10 do: [ :x | #G emitBeepOfFrequency: (400+(x*20)) forTime: 20 ].
	1 to: 3 do: [ :a | 0 to: a do: [ :b | #G emitBeepOfFrequency: (400+a*50) forTime: (5+b*10) ].
	^ 0
]"

struct Foo | {x i32} |

fn main [
	stdout := (#G stdHandle: -11).
	null := ({*u32} ~ 0).
	fob := ({Foo} x: 3).
	false ifTrue: [
		#G write: stdout data: ({*u8} ~ 'True!') ofLength: ({u32} ~ 5) returningBytesWritten: null andOverlapped: null
	] ifFalse: [
		#G write: stdout data: ({*u8} ~ 'False!') ofLength: ({u32} ~ 6) returningBytesWritten: null andOverlapped: null
	].
	#G exitProcessWithCode: ({u32} ~ (0)).
	^ 0
]
